using System.ComponentModel;
using System.Numerics;

namespace universe_simulator.cheat;

public class Particle: IParticle
{
    public double energy { get; set; }
    public Vector3 momentum { get; set; }
    public double mass  { get; set; }
    public Vector3 position { get ; set ; }

    public Particle(double energy, Vector3 position, double mass, Vector3 momentum)
    {
        this.energy = energy;
        this.position = position;
        this.mass = mass;
        this.momentum = momentum;
    }
}

public class Photon : Particle
{
    public Photon(ulong frequency, IParticle source, Vector3 dir): 
        base(frequency * CONSTANTS.PLANCK_CONSTANT, source.position, 0, dir)
    {        
        this.direction = dir;
        this.source = source;
    }

    public Vector3 direction { get; } // The direction would be relative to an observer
    public double frequency { get { return energy / CONSTANTS.PLANCK_CONSTANT; }} // The wavelength determines the type of photon (light, gamma, radio wave) as well as the energy
    public IParticle source { get; } // Photons are generated by eletrons
    public IParticle? target { get; } // Photons will eventually be absorbed by electrons on a target
    // Other properties and methods can be added here
}